var search_data = {"index":{"searchIndex":["assembly","buyable","c","call","coin","console","control","courier","database","date","discog","openssl","ssl","emailer","input","inventory","map","model","object","oriana","pending","profile","sellable","session","tag","template","textmanager","thd","xml","%()","*()","**()","+()","-()","/()","<<()","<=>()","[]()","[]()","action()","action()","add_command()","aquisition_notice()","begin()","bind()","branch()","close()","collect_roots()","color_list_to_s()","completion_notice()","connect()","current_page()","delete_template()","divide_by()","divide_by!()","ebay_time()","find_name()","find_products()","func1()","func2()","get_active()","get_color_list_name()","get_flags()","get_new_id()","get_purchased()","get_quality_list_name()","get_sold()","get_vars()","height=()","id=()","is_leaf?()","is_leaf?()","is_root?()","join()","lists_to_s()","loopy()","make_shop_call()","make_trade_call()","multiply_by()","name=()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","next()","next_page()","next_sub()","parse()","post()","post()","post_both()","post_sub()","previous()","previous_page()","previous_sub()","prompt()","purchase_confirmation()","quality_list_to_s()","quantity_needed=()","query()","root=()","search()","send()","start()","start()","template_root?()","template_to_s()","templates_to_s()","to_f()","to_i()","to_s()","to_s()","to_s()","to_s()","to_s()","token=()","unbind()","update_color()","upload_picture()","upload_pictures()","value=()","value=()","verify_add_item()","width=()","year()","session.or"],"longSearchIndex":["assembly","buyable","c","call","coin","console","control","courier","database","date","discog","discog::openssl","discog::openssl::ssl","emailer","input","inventory","map","model","object","oriana","pending","profile","sellable","session","tag","template","textmanager","thd","xml","coin#%()","coin#*()","coin#**()","coin#+()","coin#-()","coin#/()","inventory#<<()","coin#<=>()","tag#[]()","xml#[]()","control#action()","pending#action()","console#add_command()","emailer#aquisition_notice()","thd#begin()","control#bind()","template#branch()","database#close()","inventory#collect_roots()","session#color_list_to_s()","emailer#completion_notice()","database#connect()","map#current_page()","inventory#delete_template()","coin#divide_by()","coin#divide_by!()","courier#ebay_time()","tag#find_name()","courier#find_products()","thd#func1()","thd#func2()","courier#get_active()","template#get_color_list_name()","input#get_flags()","inventory#get_new_id()","courier#get_purchased()","template#get_quality_list_name()","courier#get_sold()","input#get_vars()","console#height=()","template#id=()","tag#is_leaf?()","template#is_leaf?()","template#is_root?()","map#join()","session#lists_to_s()","thd#loopy()","call#make_shop_call()","call#make_trade_call()","coin#multiply_by()","tag#name=()","assembly::new()","call::new()","coin::new()","console::new()","control::new()","courier::new()","database::new()","date::new()","discog::new()","emailer::new()","input::new()","inventory::new()","map::new()","pending::new()","profile::new()","session::new()","tag::new()","template::new()","textmanager::new()","thd::new()","xml::new()","textmanager#next()","map#next_page()","textmanager#next_sub()","xml#parse()","map#post()","textmanager#post()","textmanager#post_both()","textmanager#post_sub()","textmanager#previous()","map#previous_page()","textmanager#previous_sub()","textmanager#prompt()","emailer#purchase_confirmation()","session#quality_list_to_s()","template#quantity_needed=()","database#query()","xml#root=()","discog#search()","emailer#send()","console#start()","oriana::start()","inventory#template_root?()","inventory#template_to_s()","inventory#templates_to_s()","coin#to_f()","coin#to_i()","coin#to_s()","map#to_s()","tag#to_s()","template#to_s()","xml#to_s()","courier#token=()","control#unbind()","inventory#update_color()","call#upload_picture()","courier#upload_pictures()","coin#value=()","tag#value=()","courier#verify_add_item()","console#width=()","date#year()",""],"info":[["Assembly","","Assembly.html","",""],["Buyable","","Buyable.html","",""],["C","","C.html","","<p>Author &mdash; Chad Bowman (chad.bowman0@gmail.com)\n<p>Copyright &mdash; Copyright © 2015 Orthus Technology\n<p>License &mdash; Distributes …\n"],["Call","","Call.html","","<p>Sends and receives HTTPS Post requests in XML to eBay\n"],["Coin","","Coin.html","","<p>A class to represent currency to the penny\n"],["Console","","Console.html","","<p>Command-line terminal++\n<p>Defaults:\n\n<pre>    Height 25 lines, Width 100 characters.\nOutput font Consolas, size ...</pre>\n"],["Control","","Control.html","","<p># Connects the view (Console) to the Model. # Ideally, this class should\nalways be extended, however …\n"],["Courier","","Courier.html","","<p>Sends and receives HTTPS callers to eBay with Call\n"],["Database","","Database.html","",""],["Date","","Date.html","",""],["Discog","","Discog.html","","<p>Manages search queries to Discogs.com&#39;s database.\n"],["Discog::OpenSSL","","Discog/OpenSSL.html","",""],["Discog::OpenSSL::SSL","","Discog/OpenSSL/SSL.html","",""],["Emailer","","Emailer.html","",""],["Input","","Input.html","","<p>Wraps and handles formatting of input string\n"],["Inventory","","Inventory.html","","<p>Houses inventory of Assemblies and Templates to which Assemblies are\nderived from\n"],["Map","","Map.html","","<p>Represents and manages a character matrix to compose the console output.\n"],["Model","","Model.html","","<p>Author &mdash; Chad Bowman (chad.bowman0@gmail.com)\n<p>Copyright &mdash; Copyright © 2015 Orthus Technology\n<p>License &mdash; Distributes …\n"],["Object","","Object.html","",""],["Oriana","","Oriana.html","","<p>Parent Class for ORIANA\n"],["Pending","","Pending.html","",""],["Profile","","Profile.html","",""],["Sellable","","Sellable.html","","<p>Author &mdash; Chad Bowman (chad.bowman0@gmail.com)\n<p>Copyright &mdash; Copyright © 2015 Orthus Technology\n<p>License &mdash; Distributes …\n"],["Session","","Session.html","",""],["Tag","","Tag.html","","<p>Represents an XML name and its roots\n"],["Template","","Template.html","",""],["TextManager","","TextManager.html","","<p>Manages output by keeping every like consistent in regards to newlines  at\nthe end of each line, only …\n"],["Thd","","Thd.html","",""],["XML","","XML.html","","<p>A class for housing and manipulating XML strings\n"],["%","Coin","Coin.html#method-i-25","( coin )",""],["*","Coin","Coin.html#method-i-2A","( coin )","<p>Integer math only\n"],["**","Coin","Coin.html#method-i-2A-2A","( coin )",""],["+","Coin","Coin.html#method-i-2B","( coin )",""],["-","Coin","Coin.html#method-i-2D","( coin )",""],["/","Coin","Coin.html#method-i-2F","( coin )","<p>Integer math only\n"],["<<","Inventory","Inventory.html#method-i-3C-3C","( part )","<p>Add Assembly or Tempalte to appropriate Hash\n<p>Parameter:\n<p>part &mdash; Assembly or Template to add to Inventory\n"],["<=>","Coin","Coin.html#method-i-3C-3D-3E","( coin )",""],["[]","Tag","Tag.html#method-i-5B-5D","( name )","<p>Finds Tags which match input param.\n<p>Parameters:\n<p>name &mdash; Name of name you&#39;d like to find\n"],["[]","XML","XML.html#method-i-5B-5D","( name )","<p>Search for specific Tag in XML.\n<p>Parameters:\n<p>name &mdash; Name of name to find\n"],["action","Control","Control.html#method-i-action","( input = nil )","<p>Parameter:\n<p>input &mdash; Input special type of input string class.\n\n"],["action","Pending","Pending.html#method-i-action","( input )",""],["add_command","Console","Console.html#method-i-add_command","( command )","<p>Adds command unless that regex source is exactly the same as another.\n<p>Parameter:\n<p>command &mdash; command to add …\n"],["aquisition_notice","Emailer","Emailer.html#method-i-aquisition_notice","()",""],["begin","Thd","Thd.html#method-i-begin","()",""],["bind","Control","Control.html#method-i-bind","( key )","<p>Binds particular key and ensures the extry field behaves as expected by not\nprinting the key pressed …\n"],["branch","Template","Template.html#method-i-branch","( color, quality )",""],["close","Database","Database.html#method-i-close","()",""],["collect_roots","Inventory","Inventory.html#method-i-collect_roots","()","<p>Returns array of all root Templates\n"],["color_list_to_s","Session","Session.html#method-i-color_list_to_s","( name )",""],["completion_notice","Emailer","Emailer.html#method-i-completion_notice","( tracking )",""],["connect","Database","Database.html#method-i-connect","()",""],["current_page","Map","Map.html#method-i-current_page","()","<p>Returns the page at @ptr\n"],["delete_template","Inventory","Inventory.html#method-i-delete_template","( id )","<p>Removes template from main Hash and any associated part maps\n<p>Parameter:\n<p>id &mdash; ID of Template to remove\n"],["divide_by","Coin","Coin.html#method-i-divide_by","( input )","<p>Conserving divide Returns array with quotient and remainder\n"],["divide_by!","Coin","Coin.html#method-i-divide_by-21","( coin )","<p>Conserving divide Sets quotient to value, returns the remainder\n"],["ebay_time","Courier","Courier.html#method-i-ebay_time","()",""],["find_name","Tag","Tag.html#method-i-find_name","( name, matches = Array.new )","<p>Finds Tags which match input param.\n<p>Parameters:\n<p>name &mdash; Name of name you&#39;d like to find\n"],["find_products","Courier","Courier.html#method-i-find_products","( keywords, page = 1, domain = nil )",""],["func1","Thd","Thd.html#method-i-func1","()",""],["func2","Thd","Thd.html#method-i-func2","()",""],["get_active","Courier","Courier.html#method-i-get_active","( page = 1 )",""],["get_color_list_name","Template","Template.html#method-i-get_color_list_name","()","<p>Returns name of color list or nil if none.\n"],["get_flags","Input","Input.html#method-i-get_flags","( command = nil )","<p>Returns hash with flags as keys and arguments as values\n\n<pre>-f argument &gt;&gt; f =&gt; arugment</pre>\n<p>Parameter:\n"],["get_new_id","Inventory","Inventory.html#method-i-get_new_id","()","<p>Searches Templates for next availible ID IDs should never exceed 9 digits.\nRaises error if 10 or more. …\n"],["get_purchased","Courier","Courier.html#method-i-get_purchased","( page = 1 )",""],["get_quality_list_name","Template","Template.html#method-i-get_quality_list_name","()","<p>Returns name of quality list or nil if none.\n"],["get_sold","Courier","Courier.html#method-i-get_sold","( page = 1 )",""],["get_vars","Input","Input.html#method-i-get_vars","( command = nil )","<p>Returns array of variables split by spaces. _ are repalced with space.\n<p>Parameter:\n<p>command &mdash; command to be …\n"],["height=","Console","Console.html#method-i-height-3D","( height )","<p>Used to modify the lines of the main text area\n<p>Parameter:\n<p>height &mdash; number of lines in the main text area …\n"],["id=","Template","Template.html#method-i-id-3D","( id )","<p>Makes sure id is always set as a String to it can be accessed  properly in\nHashes\n<p>Parameter:\n<p>id &mdash; new ID …\n"],["is_leaf?","Tag","Tag.html#method-i-is_leaf-3F","()","<p>Returns: <code>boolean</code> false if value is a Array, true if not\n"],["is_leaf?","Template","Template.html#method-i-is_leaf-3F","()","<p>Returns true if the part map is empty (there are no children)\n"],["is_root?","Template","Template.html#method-i-is_root-3F","( inventory )","<p>Checks inventory templates to see if any other template has this one listed\nas child.\n<p>Parameter:\n<p>inventory … &mdash; "],["join","Map","Map.html#method-i-join","( page )","<p>Takes in text from another Map and sitches the two maps together to a\nsingle String for a single page. …\n"],["lists_to_s","Session","Session.html#method-i-lists_to_s","()",""],["loopy","Thd","Thd.html#method-i-loopy","()",""],["make_shop_call","Call","Call.html#method-i-make_shop_call","( call, content = '' )","<p>Makes a call to eBay&#39;s Shopping API. No token is needed here.\n<p>Parameters:\n<p>call &mdash; Command from eBay&#39;s …\n"],["make_trade_call","Call","Call.html#method-i-make_trade_call","( call, content = '' )","<p>Makes a call to eBay&#39;s Trading API. Requires a working token to work.\n<p>Parameters:\n<p>call &mdash; Command from …\n"],["multiply_by","Coin","Coin.html#method-i-multiply_by","( input )",""],["name=","Tag","Tag.html#method-i-name-3D","( name )","<p>Sets new name, extracts attribute information in the form below into a Hash\n\n<pre>TagName[ key=/?(&#39;|&quot;)value/?(&#39;|&quot;), ...</pre>\n"],["new","Assembly","Assembly.html#method-c-new","( name, id, colors, qualities, map, color, quality )",""],["new","Call","Call.html#method-c-new","( token, production = true, trading_version = '921', shopping_version = '517' )","<p>Parameters:\n<p>production &mdash; Set true when using eBay&#39;s Production environment, false when using the\nSandbox …\n"],["new","Coin","Coin.html#method-c-new","( value = 0 )","<p>value &mdash; String, Integer, Float, or Coin input to initialize value.\n\n"],["new","Console","Console.html#method-c-new","( title = 'Console', initial_text = '' )","<p>Parameters:\n<p>title &mdash; title of window\n<p>initial_text &mdash; text to display upon startup\n"],["new","Control","Control.html#method-c-new","( model = nil, prompt = false )","<p>Parameters:\n<p>model &mdash; Object h\n<p>prompt &mdash; Regexp checking when an input should trigger this command.\n"],["new","Courier","Courier.html#method-c-new","( token, production = true )",""],["new","Database","Database.html#method-c-new","( host, username, password, database, port = 3306 )",""],["new","Date","Date.html#method-c-new","( date )",""],["new","Discog","Discog.html#method-c-new","()",""],["new","Emailer","Emailer.html#method-c-new","( name, to, from = 'chad@orthus.net' )",""],["new","Input","Input.html#method-c-new","( value )","<p>Parameter:\n<p>value &mdash; string input to console\n\n"],["new","Inventory","Inventory.html#method-c-new","()",""],["new","Map","Map.html#method-c-new","( lines, chars )","<p>Parameters:\n<p>lines &mdash; number of horizontal lines\n<p>chars &mdash; number of characters per line\n"],["new","Pending","Pending.html#method-c-new","( prompt )",""],["new","Profile","Profile.html#method-c-new","( production, token )",""],["new","Session","Session.html#method-c-new","()",""],["new","Tag","Tag.html#method-c-new","( name, value = Array.new )","<p>Parameters:\n<p>name &mdash; tag name\n<p>value &mdash; Array containing child names or value when name is a leaf\n"],["new","Template","Template.html#method-c-new","( name, id, colors, qualities, quantity = 1 )","<p>ID of child assembly If the child is required to sell If the assembly&#39;s\nchildren can be dismantled …\n"],["new","TextManager","TextManager.html#method-c-new","( parent, lines, characters, boundary = 0.69 )","<p>Parameters:\n<p>parent &mdash; root pane\n<p>lines &mdash; number of horizontal lines\n"],["new","Thd","Thd.html#method-c-new","( out )",""],["new","XML","XML.html#method-c-new","( root )","<p>Parameter:\n<p>root &mdash; The root Tag or raw XML String\n\n"],["next","TextManager","TextManager.html#method-i-next","()","<p>Displays the next page for the Main pane, if it exists.\n"],["next_page","Map","Map.html#method-i-next_page","()","<p>Increments @ptr if legal Returns self\n"],["next_sub","TextManager","TextManager.html#method-i-next_sub","()","<p>Displays the next page for the Sub pane, if it exists.\n"],["parse","XML","XML.html#method-i-parse","( input )",""],["post","Map","Map.html#method-i-post","( text )","<p>Posts new text to the Map. Resets all pages.\n<p>Parameter:\n<p>text &mdash; text to post to Map\n"],["post","TextManager","TextManager.html#method-i-post","( text )","<p>Posts text in Main pane\n<p>Parameter:\n<p>text &mdash; text to replace on the Main pane.\n"],["post_both","TextManager","TextManager.html#method-i-post_both","( main, sub )","<p>Posts text in both panes\n<p>Parameter:\n<p>main &mdash; text to replace on the Main pane.\n"],["post_sub","TextManager","TextManager.html#method-i-post_sub","( text )","<p>Posts text in Sub pane\n<p>Parameter:\n<p>text &mdash; text to replace on the Sub pane.\n"],["previous","TextManager","TextManager.html#method-i-previous","()","<p>Displays the previous page for the Main pane, if it exists.\n"],["previous_page","Map","Map.html#method-i-previous_page","()","<p>Decrements @ptr if legal Returns self\n"],["previous_sub","TextManager","TextManager.html#method-i-previous_sub","()","<p>Displays the previous page for the Sub pane, if it exists.\n"],["prompt","TextManager","TextManager.html#method-i-prompt","( text )","<p>Posts text on very bottom of output\n<p>Parameter:\n<p>text &mdash; text to place at prompt location. Newlines are repalced …\n"],["purchase_confirmation","Emailer","Emailer.html#method-i-purchase_confirmation","()",""],["quality_list_to_s","Session","Session.html#method-i-quality_list_to_s","( name )",""],["quantity_needed=","Template","Template.html#method-i-quantity_needed-3D","( quantity )","<p>Makes sure quanity is always a Fixnum for future operations.\n<p>Parameter:\n<p>quantity &mdash; quantity of parts needed …\n"],["query","Database","Database.html#method-i-query","( request )",""],["root=","XML","XML.html#method-i-root-3D","( root )","<p>Sets a new root Tag or parses one if XML String\n<p>Parameter:\n<p>root &mdash; Raw XML String or Tag.\n"],["search","Discog","Discog.html#method-i-search","( barcode )","<p>Perform a barcode inquiry.\n<p>Parameters\n<p><code>barcode</code> - [String (Required)] <code>barcode</code> to search.\n"],["send","Emailer","Emailer.html#method-i-send","( subject, content )","<p>Sends HTML formatted email @to, @from an @orthus.net email. with\n<em>subject</em> and <em>content</em>.\n"],["start","Console","Console.html#method-i-start","()","<p>Run the main_pane loop, start the window\n"],["start","Oriana","Oriana.html#method-c-start","()","<p>Call this class method to start the program\n"],["template_root?","Inventory","Inventory.html#method-i-template_root-3F","( id )","<p>Checks all template&#39;s part maps for id, if no match is found, returns\ntrue, otherwise false.\n<p>Parameter: …\n"],["template_to_s","Inventory","Inventory.html#method-i-template_to_s","( id, details = false, space = '', att = '' )","<p>Returns string of templates in respective heiarchy\n<p>Parameters:\n<p>id &mdash; ID of root template\n"],["templates_to_s","Inventory","Inventory.html#method-i-templates_to_s","( details = false )","<p>Returns a string with the entire Template heiarchy\n<p>Parameter:\n<p>details &mdash; whether or not to show color and …\n"],["to_f","Coin","Coin.html#method-i-to_f","()",""],["to_i","Coin","Coin.html#method-i-to_i","()",""],["to_s","Coin","Coin.html#method-i-to_s","()",""],["to_s","Map","Map.html#method-i-to_s","()","<p>Converts the current page (Array) into a single String\n"],["to_s","Tag","Tag.html#method-i-to_s","( space = '' )","<p>Returns a string representation of name and children\n<p>Parameter:\n<p>space &mdash; Used recursively by method. Leave …\n"],["to_s","Template","Template.html#method-i-to_s","()","<p>Displays name and ID\n"],["to_s","XML","XML.html#method-i-to_s","()",""],["token=","Courier","Courier.html#method-i-token-3D","( token )",""],["unbind","Control","Control.html#method-i-unbind","( key )","<p>Properly unbinds key from root. Sets entry back to behave normally\n<p>Parameter:\n<p>key &mdash; Key to unbind\n"],["update_color","Inventory","Inventory.html#method-i-update_color","( name, colors )",""],["upload_picture","Call","Call.html#method-i-upload_picture","( name, path )",""],["upload_pictures","Courier","Courier.html#method-i-upload_pictures","( photos )",""],["value=","Coin","Coin.html#method-i-value-3D","( value )","<p>value &mdash; Accepts and normalizes any valid input\n\n"],["value=","Tag","Tag.html#method-i-value-3D","( value )","<p>Sets value. If Tag, appends it to the array.\n<p>Parameter:\n<p>value &mdash; String, Array, or Tag to act as Tag value …\n"],["verify_add_item","Courier","Courier.html#method-i-verify_add_item","( vars )","<p>dateTime YYYY-MM-DDTHH:MM:SS.SSSZ (e.g., 2004-08-04T19:09:02.768Z)\n"],["width=","Console","Console.html#method-i-width-3D","( width )","<p>Used to modify how many characters each line in the main text area.\n<p>Parameter:\n<p>width &mdash; number of charcters …\n"],["year","Date","Date.html#method-i-year","()",""],["session.or","","saves/session_or.html","","<p>— !ruby/object:Session color_lists:\n\n<pre>disabled: &amp;3\n- n/a\nds lite: &amp;1\n- Crimson\n- Cobalt\n- Black\n- White ...</pre>\n"]]}}